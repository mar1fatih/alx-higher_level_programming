import module:
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

>>> matrix = [[1, 2, 3],[4, 5, 6]]

simple test:
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

test negative:
    >>> matrix_divided(matrix, -3)
    [[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

test zero division:
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

test wrong matrix:
    >>> matrix = [[1, 2, 3],[4, 5]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

test all matrix integers:
    >>> matrix = [[1, 2, 3],[4, 5, True]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

test empty matrix:
    >>> matrix = [[]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

test matrix with 1 number:
    >>> matrix = [[1]]
    >>> matrix_divided(matrix, 3)
    [[0.33]]

test with 2 numbers:
    >>> matrix = [[1], [2]]
    >>> matrix_divided(matrix, 3)
    [[0.33], [0.67]]

Test normal matrix:
    >>> matrix_divided([[2, 4, 8], [1, 2, 3]], 2)
    [[1.0, 2.0, 4.0], [0.5, 1.0, 1.5]]

Test matrix:
    >>> matrix_divided([[2]], 2)
    [[1.0]]

Test matrix:
    >>> m = [[2, 4, 8], [1, 2, 3]]
    >>> matrix_divided(m, 2)
    [[1.0, 2.0, 4.0], [0.5, 1.0, 1.5]]
    >>> m[1][1]
    2

Test division by negative:
    >>> matrix_divided([[2, 4, 8], [1, 2, 3]], -3)
    [[-0.67, -1.33, -2.67], [-0.33, -0.67, -1.0]]


Test none:
    >>> matrix_divided(none, 1)
    Traceback (most recent call last):
    ...
    NameError: name 'none' is not defined

Test empty matrix:
    >>> matrix_divided([[]], 10)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test empty matrix:
    >>> matrix_divided([[], [], []], 10)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


Test str:
    >>> matrix_divided("f", 1)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


Test empty list:
    >>> matrix_divided([], 1)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test by str num:
    >>> matrix_divided([[2]], "foo")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Test missing arg:
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

